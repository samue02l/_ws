//以下使用了chatgpt和老师给的程式

import { Application, Router } from "https://deno.land/x/oak/mod.ts";

const posts = [
  { id: 0, title: 'aaa', body: 'aaaaa', created_at: new Date() },
  { id: 1, title: 'bbb', body: 'bbbbb', created_at: new Date() }
];

const router = new Router();

router.get('/', list)
  .get('/post/new', newPost)
  .get('/post/:id', showPost)
  .post('/post', createPost);

const app = new Application();
app.use(router.routes());
app.use(router.allowedMethods());

async function layout(title, content) {
  return `
  <html>
  <head>
    <title>${title}</title>
    <style>
      body { padding: 80px; font: 16px Helvetica, Arial; }
      h1 { font-size: 2em; }
      h2 { font-size: 1.2em; }
      #posts { margin: 0; padding: 0; }
      #posts li { margin: 40px 0; padding: 0; padding-bottom: 20px; border-bottom: 1px solid #eee; list-style: none; }
      #posts li:last-child { border-bottom: none; }
      textarea { width: 500px; height: 300px; }
      input[type=text], textarea { border: 1px solid #eee; border-top-color: #ddd; border-left-color: #ddd; border-radius: 2px; padding: 15px; font-size: .8em; }
      input[type=text] { width: 500px; }
    </style>
  </head>
  <body>
    <section id="content">${content}</section>
  </body>
  </html>
  `;
}

async function list(ctx) {
  const content = `
    <h1>Posts</h1>
    <p>You have <strong>${posts.length}</strong> posts!</p>
    <p><a href="/post/new">Create a Post</a></p>
    <ul id="posts">
      ${posts.map(post => `
        <li>
          <h2>${post.title}</h2>
          <p>Created at: ${new Date(post.created_at).toLocaleString()}</p>
          <p><a href="/post/${post.id}">Read post</a></p>
        </li>
      `).join('')}
    </ul>
  `;
  ctx.response.body = await layout('Posts', content);
}

async function newPost(ctx) {
  const content = `
    <h1>New Post</h1>
    <p>Create a new post.</p>
    <form action="/post" method="post">
      <p><input type="text" placeholder="Title" name="title"></p>
      <p><textarea placeholder="Contents" name="body"></textarea></p>
      <p><input type="submit" value="Create"></p>
    </form>
  `;
  ctx.response.body = await layout('New Post', content);
}

async function showPost(ctx) {
  const id = parseInt(ctx.params.id);
  const post = posts[id];
  if (!post) ctx.throw(404, 'Invalid post ID');
  
  const content = `
    <h1>${post.title}</h1>
    <pre>${post.body}</pre>
    <p>Created at: ${new Date(post.created_at).toLocaleString()}</p>
  `;
  ctx.response.body = await layout(post.title, content);
}

async function createPost(ctx) {
  const body = ctx.request.body;
  if (body.type === "form") {
    const pairs = await body.form();
    const post = {};
    for (const [key, value] of pairs) {
      post[key] = value;
    }
    post.created_at = new Date();
    post.id = posts.length;
    posts.push(post);
    ctx.response.redirect('/');
  }
}

console.log('Server running at http://127.0.0.1:8000');
await app.listen({ port: 8000 });
